@model FilmViewer.Models.Moderator.MovieViewViewModel
@using FilmViewer.Models
@using FilmViewer.Statics
@using PagedList.Mvc;
@{
    ViewBag.Title = "MovieView";
    Html.RenderPartial("_SearchFull");

}
@section styles{
    @Styles.Render(
            "~/bundle/styles/pagedList")
}
<section class="container">
    <div class="col-sm-8 col-md-9 col-sm-push-4 col-md-push-3">
        <div class="movie">

            <div class="devider-wrapper">
                <div class="devider"></div>
            </div>
            <h2 class="page-heading">Movies list</h2>
            <div class="select-area">
                @Html.Partial("_MovieSearch")

                @if (TempData[UserMessages.UserMessage] != null)
                {
                    var message = (MessageViewModel)TempData[UserMessages.UserMessage];

                    <div class="alert @message.CssClass">
                        <span class="icon-flag"></span>
                        @message.Message
                        <a class="close" data-dismiss="alert" href="#" aria-hidden="true"></a>
                    </div>
                }
            </div>
            <div class="rates-wrapper">
                <table>
                    <tr>
                        <th>
                            @Html.ActionLink("Title", "MovieView", new { sortOrder = ViewBag.TitlePLParm, currentFilter = ViewBag.MovieFilter })
                        </th>
                        <th>
                            @Html.ActionLink("Premiere date", "MovieView", new { sortOrder = ViewBag.PremiereDateParm, currentFilter = ViewBag.MovieFilter })
                        </th>
                        <th>
                            @Html.ActionLink("Duration", "MovieView", new { sortOrder = ViewBag.DurationParm, currentFilter = ViewBag.MovieFilter })

                        </th>
                        <th></th>

                    </tr>
                    <colgroup class="col-width-lg"></colgroup>
                    <colgroup class="col-width"></colgroup>
                    <colgroup class="col-width"></colgroup>
                    <colgroup class="col-width"></colgroup>

                    @{var count = 1;}

                    @foreach (var movie in Model.MovieList)
                    {
                        <tr class="@(count %2 ==0 ? "rates rates--top" : "rates")">
                            <td class="rates__obj">@count @movie.Title</td>
                            <td class="rates__vote">@(movie.PremiereDate.HasValue ? movie.PremiereDate.Value.ToShortDateString() : "")</td>
                            <td class="rates__vote">@movie.Duration</td>

                            <td class="rates__vote">
                                @Html.ActionLink("Edit", "MovieEdit", new { id = movie.MovieId }, new { @class = "btn btn-md btn--warning" })

                                @using ((Html.BeginForm("DeleteMovie", "Moderator", FormMethod.Post)))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("id", movie.MovieId)
                                    <button class="btn btn-md btn--danger" type="submit">Delete</button>
                                }
                            </td>

                        </tr>
                        count++;
                    }
                </table>
                @Html.PagedListPager(Model.MovieList, page => Url.Action("MovieView",
                                   new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.MovieFilter }))

            </div>

        </div>


    </div>

    @Html.Partial("_ModeratorMenu")


</section>

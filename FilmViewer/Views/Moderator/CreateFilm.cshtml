@using FilmViewer.Models.Moderator
@model FilmViewer.Models.Moderator.CreateFilmViewModel

@{
    ViewBag.Title = "CreateFilm";
    Html.RenderPartial("_SearchFull");
}
@section styles{
    @Styles.Render(
            "~/bundles/styles/datepicker",
            "~/bundles/styles/panelCreate",
            "~/bundles/styles/loopj")
}
@section scripts{
    @Scripts.Render(
            "~/bundles/scripts/datepicker",
            "~/bundles/scripts/loopj")
}
@section JavaScript
{
    
    <script type="text/javascript">

        $('#resetButton').click(function () {
            $('#@CreateFilmViewModel.CategoryCollectionKey').tokenInput('clear');
            $('#@CreateFilmViewModel.ActorCollectionKey').tokenInput('clear');
            $('#@CreateFilmViewModel.MetadataCollectionKey').tokenInput('clear');
            $('#@CreateFilmViewModel.DirectorCollectionKey').tokenInput('clear');
        });
        $(document).ready(function () {
            $('#PremiereDate').Zebra_DatePicker().data('Zebra_DatePicker');
            $('#PremiereDate').val('@Model.PremiereDateString').data('Zebra_DatePicker');



            $('#@CreateFilmViewModel.CategoryCollectionKey').tokenInput('SearchCategoryWithName', {
                queryParam: 'searchTerm',
                theme: 'facebook',
                preventDuplicates: true,
                highlightDuplicates: false
            });
            $('#@CreateFilmViewModel.ActorCollectionKey').tokenInput('SearchActorWithName', {
                queryParam: 'searchTerm',
                theme: 'facebook',
                preventDuplicates: true,
                highlightDuplicates: false
            });

            $('#@CreateFilmViewModel.MetadataCollectionKey').tokenInput('SearchMetadataWithName', {
                queryParam: 'searchTerm',
                theme: 'facebook',
                preventDuplicates: true,
                highlightDuplicates: false
            });
            $('#@CreateFilmViewModel.DirectorCollectionKey').tokenInput('SearchDirectorWithName', {
                queryParam: 'searchTerm',
                theme: 'facebook',
                preventDuplicates: true,
                highlightDuplicates: false,
                tokenLimit: 1
            });
        });

    </script>
}
<section class="container">
    <div class="col-sm-8 col-md-9 col-sm-push-4 col-md-push-3">
        <div class="movie">

            <div class="devider-wrapper">
                <div class="devider"></div>
            </div>
            <h2 class="page-heading">Create Panel</h2>



            <div class="panelCreate panelCreate-primary dialog-panel">
                <div class="panelCreate-heading">
                    <h2 class="page-heading">Movie Create</h2>
                </div>
                <div class="panelCreate-body">
                    @using (Html.BeginForm("CreateFilm", "Moderator", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()
                        <div>
                            <div class="form-group">
                                @if (!Html.ViewData.ModelState.IsValid)
                                {
                                    @Html.ValidationSummary("", new { @class = "inv-em alert alert-danger" })
                                }
                                <label class="control-label col-md-2 col-md-offset-2">Title</label>
                                <div class="col-md-7">
                                    <div class="form-group">
                                        <div class="col-md-11">
                                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })
                                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-2 col-md-offset-2">Informations</label>
                                <div class="col-md-7">
                                    <div class="form-group">
                                        <div class="col-md-11">
                                            <input type="text" class="form-control" id="PremiereDate" name="PremiereDate" placeholder="Premiere Date">
                                            @Html.ValidationMessageFor(model => model.PremiereDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-11">
                                            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", placeholder = "Time(min)" } })
                                            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-11">
                                            @Html.EditorFor(model => model.ProductionCountries, new { htmlAttributes = new { @class = "form-control", placeholder = "Production countries" } })
                                            @Html.ValidationMessageFor(model => model.ProductionCountries, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group internal">
                                        <div class="col-md-11">
                                            @Html.EditorFor(model => model.HeraldUrl, new { htmlAttributes = new { @class = "form-control", placeholder = "Trailer url" } })
                                            @Html.ValidationMessageFor(model => model.HeraldUrl, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="form-group internal">
                                <label class="control-label col-md-2 col-md-offset-2">Director</label>
                                <div class="col-md-7">
                                    <div class="form-group">
                                        <div class="col-md-11">
                                            <input type="text" id="@CreateFilmViewModel.DirectorCollectionKey" name="@CreateFilmViewModel.DirectorCollectionKey" placeholder="Director" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group internal">
                                <label class="control-label col-md-2 col-md-offset-2">Categories</label>
                                <div class="col-md-7">
                                    <div class="form-group">
                                        <div class="col-md-11">
                                            <input type="text" id="@CreateFilmViewModel.CategoryCollectionKey" name="@CreateFilmViewModel.CategoryCollectionKey" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group internal">
                                <label class="control-label col-md-2 col-md-offset-2">Actors</label>
                                <div class="col-md-7">
                                    <div class="form-group">
                                        <div class="col-md-11">
                                            <input type="text" id="@CreateFilmViewModel.ActorCollectionKey" name="@CreateFilmViewModel.ActorCollectionKey" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group internal">
                                <label class="control-label col-md-2 col-md-offset-2">Metadata</label>
                                <div class="col-md-7">
                                    <div class="form-group">
                                        <div class="col-md-11">
                                            <input type="text" id="@CreateFilmViewModel.MetadataCollectionKey" name="@CreateFilmViewModel.MetadataCollectionKey" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group internal">
                                <label class="control-label col-md-2 col-md-offset-2">Description</label>
                                <div class="col-md-7">
                                    <div class="form-group">
                                        <div class="col-md-11">
                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", rows = "5" } })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-offset-4 col-md-3">
                                    <button class="btn btn-lg btn-danger" style="float:right" id="resetButton" type="reset">Clear all</button>
                                </div>
                                <div class="col-md-3">
                                    <button class="btn btn-lg btn-primary" type="submit">Next step</button>

                                </div>
                            </div>

                        </div>
                    }
                </div>



            </div>

            @Html.AntiForgeryToken()


        </div>
    </div>
    @Html.Partial("_ModeratorMenu")


</section>


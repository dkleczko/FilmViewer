@using System.Activities.Expressions
@using System.Web.Mvc.Html
@using FilmViewer.Models
@using FilmViewer.Statics
@model FilmViewer.Models.Admin.ManageRolesViewModel
@{
    ViewBag.Title = "User";
    Html.RenderPartial("_SearchFull");

}
@section styles{
    @Styles.Render(
                    "~/bundle/styles/pagedList")
}
<section class="container">
    <div class="col-sm-8 col-md-9 col-sm-push-4 col-md-push-3">
        <div class="movie">

            <div class="devider-wrapper">
                <div class="devider"></div>
            </div>
            <h2 class="page-heading">User @Model.AppUser.UserName roles Edit</h2>
            <div class="select-area">

                <div class="search-wrapper">
                    <div class="container--add">
                        @using (Html.BeginForm("AddRoleToUserAsync", "Admin", FormMethod.Post, new { @class = "form-horizontal" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("userId", Model.AppUser.ApplicationUserId)
                            @Html.DropDownList("roleId", Model.AllRoles, new { @class = "form-control" })
                            <button type="submit" class="btn btn-md btn--danger search__button">Add </button>
                        }
                    </div>
                </div>
                <div>
                    @if (TempData[UserMessages.UserMessage] != null)
                    {
                        var message = (MessageViewModel)TempData[UserMessages.UserMessage];

                        <div class="alert @message.CssClass">
                            <span class="icon-flag"></span>
                            @message.Message
                            <a class="close" data-dismiss="alert" href="#" aria-hidden="true"></a>
                        </div>
                    }
                </div>
            </div>
            <div>
                <table>
                    <tr>
                        <th>
                            Role Name
                        </th>
                        <th></th>

                    </tr>
                    <colgroup class="col-width-lg"></colgroup>
                    <colgroup class="col-width"></colgroup>
                    @{var count = 1;}
                    @if (Model.AppUser.Roles != null)
                    {
                        foreach (var role in Model.AppUser.Roles)
                        {
                            <tr class="@(count % 2 == 0 ? "rates rates--top" : "rates")">
                                <td class="rates__obj">@count @role.RoleName</td>
                                <td class="rates__vote">
                                    @using (Html.BeginForm("DeleteRoleFromUserAsync", "Admin", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.Hidden("roleId", role.RoleId)
                                        @Html.Hidden("userId", Model.AppUser.ApplicationUserId)
                                        <button class="btn btn-md btn--danger" type="submit">Delete</button>
                                    }
                                </td>

                            </tr>
                            count++;
                        }
                    }
                </table>
            </div>
        </div>
    </div>
    @Html.Partial("_AdminMenu")
</section>
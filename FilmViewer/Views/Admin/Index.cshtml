@model FilmViewer.Models.Admin.IndexViewModel
@using FilmViewer.Models
@using FilmViewer.Statics
@using PagedList.Mvc;

@{
    ViewBag.Title = "Users";
    Html.RenderPartial("_SearchFull");

}
@section styles{
    @Styles.Render(
                            "~/bundle/styles/pagedList")
}
<section class="container">
    <div class="col-sm-8 col-md-9 col-sm-push-4 col-md-push-3">
        <div class="movie">

            <div class="devider-wrapper">
                <div class="devider"></div>
            </div>
            <h2 class="page-heading">Users list</h2>
            <div class="select-area">
                @Html.Partial("_UserSearch")
                <div>
                    @if (TempData[UserMessages.UserMessage] != null)
                    {
                        var message = (MessageViewModel)TempData[UserMessages.UserMessage];

                        <div class="alert @message.CssClass">
                            <span class="icon-flag"></span>
                            @message.Message
                            <a class="close" data-dismiss="alert" href="#" aria-hidden="true"></a>
                        </div>
                    }
                </div>
            </div>
            <div>
                <table>
                    <tr>
                        <th>
                            Username
                        </th>
                        <th>
                            Roles
                        </th>
                        <th>Lockout End Date</th>
                        <th></th>

                    </tr>
                    <colgroup class="col-width-lg"></colgroup>
                    <colgroup class="col-width"></colgroup>
                    @{var count = 1;}

                    @foreach (var user in Model.Users)
                    {
                        <tr class="@(count % 2 == 0 ? "rates rates--top" : "rates")">
                            <td class="rates__obj">@count @user.UserName</td>
                            <td class="rates__vote">
                                @if (user.Roles != null)
                                {
                                    string.Join(",", user.Roles.Select(p => p.RoleName));
                                }
                            </td>
                            <td class="rates__vote">
                                @if (user.IsLockedOutEnabled)
                                {

                                    <text>@(user.LockoutEndDateUtc.HasValue ? user.LockoutEndDateUtc.Value.ToString() : "")</text>;
                                }
                            </td>
                            <td class="rates__vote">
                                @Html.ActionLink("Set Role", "ManageRoles", new { id = user.ApplicationUserId }, new { @class = "btn btn-md btn--warning" })
                                @if (!user.IsLockedOutEnabled || !user.LockoutEndDateUtc.HasValue)
                                {
                                    using (Html.BeginForm("BlockAccount", "Admin", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.Hidden("id", user.ApplicationUserId)
                                        <button class="btn btn-md btn--danger" type="submit">Block</button>
                                    }
                                }
                                else
                                {
                                    using (Html.BeginForm("UnblockAccount", "Admin", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.Hidden("id", user.ApplicationUserId)
                                        <button class="btn btn-md btn--danger" type="submit">Unblock</button>
                                    }
                                }
                            </td>

                        </tr>
                        count++;
                    }
                </table>
                @Html.PagedListPager(Model.Users, page => Url.Action("Index",
                                   new { page, currentFilter = ViewBag.ActorsFilter }))

            </div>

        </div>


    </div>

    @Html.Partial("_AdminMenu")


</section>
